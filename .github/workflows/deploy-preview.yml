name: Preview Deployment

on:
  workflow_dispatch:
    inputs:
      force_native_build:
        description: "Force native build"
        type: boolean
        default: true
        required: true
  push:
    branches:
      - main
    paths:
      - "**.ts"
      - "**.tsx"
      - "assets/**"
      - "package.json"
      - "app.config.ts"
      - "ios/**"

# Ensure only one workflow runs at a time
concurrency:
  group: "deployment"
  cancel-in-progress: false

permissions:
  contents: write
  id-token: write

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      has_native_changes: ${{ steps.check-changes.outputs.has_native_changes }}
      commit_message: ${{ steps.commit_msg.outputs.message }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get Commit Message
        id: commit_msg
        run: echo "message=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

      - name: Check for native changes
        id: check-changes
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ inputs.force_native_build }}" == "true" ]]; then
            echo "has_native_changes=true" >> $GITHUB_OUTPUT
          elif git diff --name-only HEAD^ HEAD | grep -E "package.json|app.config.ts|ios/|android/"; then
            echo "has_native_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_native_changes=false" >> $GITHUB_OUTPUT
          fi

  native-build:
    needs: check-changes
    if: needs.check-changes.outputs.has_native_changes == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Check if PAT_GITHUB is set
        run: |
          if [ -z "${{ secrets.PAT_GITHUB }}" ]; then
            echo "::error::PAT_GITHUB secret is not set. Please add it to repository secrets."
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "yarn"
          cache-dependency-path: yarn.lock
        env:
          SKIP_YARN_COREPACK_CHECK: "1"
      - run: corepack enable

      - name: Install dependencies
        run: yarn install

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Increment minor version and build
        env:
          GH_TOKEN: ${{ secrets.PAT_GITHUB }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          CURRENT_COMMIT=$(git rev-parse HEAD)
          npm version minor -m "chore: increment minor version [skip ci]"
          git push https://${GH_TOKEN}@github.com/${{ github.repository }}.git HEAD:main --follow-tags --force
          node scripts/build/ios/preview.js
          eas build --platform all --profile preview --non-interactive --auto-submit
          npx sentry-expo-upload-sourcemaps dist
          git reset --hard HEAD~1
          git push --force https://${GH_TOKEN}@github.com/${{ github.repository }}.git HEAD:main

      - name: Rollback on build failure
        if: failure()
        env:
          GH_TOKEN: ${{ secrets.PAT_GITHUB }}
        run: |
          git reset --hard HEAD~1
          git push --force https://${GH_TOKEN}@github.com/${{ github.repository }}.git HEAD:main

  ota-update:
    needs: check-changes
    if: needs.check-changes.outputs.has_native_changes == 'false'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "yarn"
          cache-dependency-path: yarn.lock
        env:
          SKIP_YARN_COREPACK_CHECK: "1"
      - run: corepack enable

      - name: Install dependencies
        run: yarn install

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Run EAS Update
        run: |
          eas update --auto --channel=preview --message "${{ needs.check-changes.outputs.commit_message }}" --non-interactive
          npx sentry-expo-upload-sourcemaps dist
