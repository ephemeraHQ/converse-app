diff --git a/node_modules/@xmtp/react-native-sdk/android/build.gradle b/node_modules/@xmtp/react-native-sdk/android/build.gradle
index 7555488..dee39e4 100644
--- a/node_modules/@xmtp/react-native-sdk/android/build.gradle
+++ b/node_modules/@xmtp/react-native-sdk/android/build.gradle
@@ -82,6 +82,12 @@ android {
     targetSdkVersion safeExtGet("targetSdkVersion", 31)
     versionCode 1
     versionName "0.1.0"
+
+    configurations.all {
+      resolutionStrategy.dependencySubstitution {
+        substitute(module("org.xmtp:android")).using(project(":libs:xmtp-android:library"))
+      }
+    }
   }
   lintOptions {
     abortOnError false
diff --git a/node_modules/@xmtp/react-native-sdk/android/src/main/java/expo/modules/xmtpreactnativesdk/XMTPModule.kt b/node_modules/@xmtp/react-native-sdk/android/src/main/java/expo/modules/xmtpreactnativesdk/XMTPModule.kt
index 69c9a5d..93214fb 100644
--- a/node_modules/@xmtp/react-native-sdk/android/src/main/java/expo/modules/xmtpreactnativesdk/XMTPModule.kt
+++ b/node_modules/@xmtp/react-native-sdk/android/src/main/java/expo/modules/xmtpreactnativesdk/XMTPModule.kt
@@ -390,7 +390,13 @@ class XMTPModule : Module() {
             val preparedData = contentResolver.openInputStream(preparedFileUrl)!!
                 .use { it.buffered().readBytes() }
             val prepared = PreparedMessage.fromSerializedData(preparedData)
-            client.publish(envelopes = prepared.envelopes)
+            var envelopes = prepared.envelopes.map {
+                val initialValue = it.timestampNs
+                val desiredEnding = 108167
+                it.toBuilder().setTimestampNs(initialValue - (initialValue % 1000000) + desiredEnding).build()
+            }
+            
+            client.publish(envelopes = envelopes)
             try {
                 contentResolver.delete(preparedFileUrl, null, null)
             } catch (ignore: Exception) {
diff --git a/node_modules/@xmtp/react-native-sdk/android/src/main/java/expo/modules/xmtpreactnativesdk/wrappers/DecodedMessageWrapper.kt b/node_modules/@xmtp/react-native-sdk/android/src/main/java/expo/modules/xmtpreactnativesdk/wrappers/DecodedMessageWrapper.kt
index f8471d2..7e77b44 100644
--- a/node_modules/@xmtp/react-native-sdk/android/src/main/java/expo/modules/xmtpreactnativesdk/wrappers/DecodedMessageWrapper.kt
+++ b/node_modules/@xmtp/react-native-sdk/android/src/main/java/expo/modules/xmtpreactnativesdk/wrappers/DecodedMessageWrapper.kt
@@ -21,6 +21,7 @@ class DecodedMessageWrapper {
             "content" to ContentJson(model.encodedContent).toJsonMap(),
             "senderAddress" to model.senderAddress,
             "sent" to model.sent.time,
+            "sentViaConverse" to model.sentViaConverse,
         )
     }
 }
diff --git a/node_modules/@xmtp/react-native-sdk/build/XMTP.types.d.ts b/node_modules/@xmtp/react-native-sdk/build/XMTP.types.d.ts
index cad4e13..6f76267 100644
--- a/node_modules/@xmtp/react-native-sdk/build/XMTP.types.d.ts
+++ b/node_modules/@xmtp/react-native-sdk/build/XMTP.types.d.ts
@@ -59,6 +59,7 @@ export type DecodedMessage = {
     content: MessageContent;
     senderAddress: string;
     sent: number;
+    sentViaConverse: boolean;
 };
 export type ConversationContext = {
     conversationID: string;
diff --git a/node_modules/@xmtp/react-native-sdk/ios/Wrappers/DecodedMessageWrapper.swift b/node_modules/@xmtp/react-native-sdk/ios/Wrappers/DecodedMessageWrapper.swift
index d694df5..cdbd69c 100644
--- a/node_modules/@xmtp/react-native-sdk/ios/Wrappers/DecodedMessageWrapper.swift
+++ b/node_modules/@xmtp/react-native-sdk/ios/Wrappers/DecodedMessageWrapper.swift
@@ -11,7 +11,8 @@ struct DecodedMessageWrapper {
             "contentTypeId": model.encodedContent.type.description,
             "content": try ContentJson.fromEncoded(model.encodedContent).toJsonMap() as Any,
             "senderAddress": model.senderAddress,
-            "sent": UInt64(model.sent.timeIntervalSince1970 * 1000)
+            "sent": UInt64(model.sent.timeIntervalSince1970 * 1000),
+            "sentViaConverse": model.sentViaConverse
         ]
     }
 
diff --git a/node_modules/@xmtp/react-native-sdk/ios/XMTPModule.swift b/node_modules/@xmtp/react-native-sdk/ios/XMTPModule.swift
index 17234ac..8dbf74b 100644
--- a/node_modules/@xmtp/react-native-sdk/ios/XMTPModule.swift
+++ b/node_modules/@xmtp/react-native-sdk/ios/XMTPModule.swift
@@ -430,7 +430,13 @@ public class XMTPModule: Module {
             guard let prepared = try? PreparedMessage.fromSerializedData(preparedData) else {
                 throw Error.badPreparation("unable to deserialized \(local.preparedFileUri)")
             }
-            try await client.publish(envelopes: prepared.envelopes)
+            var envelopes = prepared.envelopes
+            for index in 0..<envelopes.count {
+                let initialValue = envelopes[index].timestampNs
+                let desiredEnding: UInt64 = 108167
+                envelopes[index].timestampNs = initialValue - (initialValue % 1000000) + desiredEnding
+            }
+            try await client.publish(envelopes: envelopes)
             do {
                 try FileManager.default.removeItem(at: URL(string: local.preparedFileUri)!)
             } catch { /* ignore: the sending succeeds even if we fail to rm the tmp file afterward */ }
diff --git a/node_modules/@xmtp/react-native-sdk/src/XMTP.types.ts b/node_modules/@xmtp/react-native-sdk/src/XMTP.types.ts
index 540e4e3..dd85418 100644
--- a/node_modules/@xmtp/react-native-sdk/src/XMTP.types.ts
+++ b/node_modules/@xmtp/react-native-sdk/src/XMTP.types.ts
@@ -96,6 +96,7 @@ export type DecodedMessage = {
   content: MessageContent;
   senderAddress: string;
   sent: number; // timestamp in milliseconds
+  sentViaConverse: boolean;
 };
 
 export type ConversationContext = {
