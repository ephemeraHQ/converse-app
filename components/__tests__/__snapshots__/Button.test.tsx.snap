// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button Component Default (Android) Button renders correctly with danger variant 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  action="danger"
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "alignItems": "center",
        "backgroundColor": "#000000",
        "borderRadius": 16,
        "flexDirection": "row",
        "justifyContent": "center",
        "overflow": "hidden",
        "paddingHorizontal": 16,
        "paddingVertical": 12,
      },
      undefined,
      false,
      undefined,
    ]
  }
>
  <Text
    style={
      [
        {
          "color": "#000000",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": 400,
          "lineHeight": 20,
        },
        undefined,
        undefined,
        [
          {
            "0": [Function],
            "color": "#FFFFFF",
            "flexGrow": 0,
            "flexShrink": 1,
            "textAlign": "center",
            "zIndex": 2,
          },
          undefined,
          false,
          undefined,
        ],
      ]
    }
  >
    Secondary Danger Button
  </Text>
</View>
`;

exports[`Button Component Default (Android) Button renders correctly with picto 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "alignItems": "center",
        "backgroundColor": "#000000",
        "borderRadius": 16,
        "flexDirection": "row",
        "justifyContent": "center",
        "overflow": "hidden",
        "paddingHorizontal": 16,
        "paddingVertical": 12,
      },
      undefined,
      false,
      undefined,
    ]
  }
>
  <RNSfsymbols
    iconColor={-1}
    multicolor={false}
    resizeMode="center"
    style={
      [
        {
          "height": undefined,
          "width": undefined,
        },
        {
          "marginEnd": 12,
          "zIndex": 1,
        },
      ]
    }
    systemName="star"
    weight="regular"
  />
  <Text
    style={
      [
        {
          "color": "#000000",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": 400,
          "lineHeight": 20,
        },
        undefined,
        undefined,
        [
          {
            "0": [Function],
            "color": "#FFFFFF",
            "flexGrow": 0,
            "flexShrink": 1,
            "textAlign": "center",
            "zIndex": 2,
          },
          undefined,
          false,
          undefined,
        ],
      ]
    }
  >
    Button with Picto
  </Text>
</View>
`;

exports[`Button Component iOS Button renders correctly with primary variant 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  action="primary"
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "alignItems": "center",
        "backgroundColor": "#000000",
        "borderRadius": 16,
        "flexDirection": "row",
        "justifyContent": "center",
        "overflow": "hidden",
        "paddingHorizontal": 16,
        "paddingVertical": 12,
      },
      undefined,
      false,
      undefined,
    ]
  }
>
  <Text
    style={
      [
        {
          "color": "#000000",
          "fontFamily": "SFProText-Regular",
          "fontSize": 16,
          "fontWeight": 400,
          "lineHeight": 20,
        },
        undefined,
        undefined,
        [
          {
            "0": [Function],
            "color": "#FFFFFF",
            "flexGrow": 0,
            "flexShrink": 1,
            "textAlign": "center",
            "zIndex": 2,
          },
          undefined,
          false,
          undefined,
        ],
      ]
    }
  >
    Primary Button
  </Text>
</View>
`;
