// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button Component Default (Android) Button renders correctly with picto 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#EFEFF0",
      "borderRadius": 100,
      "opacity": 1,
      "paddingHorizontal": 15,
      "paddingVertical": 4,
    }
  }
>
  <RNSfsymbols
    iconColor={-1}
    multicolor={false}
    resizeMode="center"
    scale="large"
    size={13}
    style={
      [
        {
          "marginLeft": 10,
          "marginRight": 15,
        },
        undefined,
      ]
    }
    systemName="star"
    weight="regular"
  />
  <Text
    allowFontScaling={true}
    style={
      [
        {
          "color": "rgb(0,0,0)",
          "fontSize": 17,
          "fontWeight": "600",
          "textAlign": "center",
        },
        undefined,
      ]
    }
  >
    Button with Picto
  </Text>
</View>
`;

exports[`Button Component Default (Android) Button renders correctly with secondary-danger variant 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignSelf": "stretch",
      "backgroundColor": "rgb(186, 26, 26)",
      "borderRadius": 100,
      "display": "flex",
      "flexDirection": "row",
      "justifyContent": "center",
      "marginHorizontal": 32,
      "opacity": 1,
      "paddingLeft": 15,
      "paddingRight": 15,
      "paddingVertical": 7,
      "textAlign": "center",
    }
  }
>
  <Text
    allowFontScaling={true}
    style={
      [
        {
          "color": "rgb(255,255,255)",
          "fontSize": 17,
          "fontWeight": "600",
          "textAlign": "center",
        },
        {
          "fontWeight": "400",
        },
        undefined,
      ]
    }
  >
    Secondary Danger Button
  </Text>
</View>
`;

exports[`Button Component iOS Button renders correctly with primary variant 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignSelf": "stretch",
      "backgroundColor": "#000",
      "borderRadius": 14,
      "display": "flex",
      "flexDirection": "row",
      "justifyContent": "center",
      "marginHorizontal": 32,
      "opacity": 1,
      "paddingVertical": 14,
      "textAlign": "center",
    }
  }
>
  <Text
    allowFontScaling={true}
    style={
      [
        {
          "color": "#FFF",
          "fontSize": 17,
          "fontWeight": "600",
          "textAlign": "center",
        },
        undefined,
      ]
    }
  >
    Primary Button
  </Text>
</View>
`;
